nohup: ignoring input
Sending build context to Docker daemon  17.92kB
Step 1/28 : FROM nvcr.io/nvidia/l4t-base:r32.7.1 AS builder
 ---> 7a58a57ab551
Step 2/28 : WORKDIR /root
 ---> Using cache
 ---> 831c3f07572a
Step 3/28 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Using cache
 ---> b04dc3cd3a21
Step 4/28 : RUN apt-get update && apt-get install -y --no-install-recommends     sudo ca-certificates build-essential wget m4 flex bison     libssl-dev libvulkan-dev git cmake ninja-build python3-dev python3-pip     && rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> ecf3b7ae1b20
Step 5/28 : RUN sudo apt-get remove --purge -y cmake
 ---> Using cache
 ---> 0d5ad192ec6a
Step 6/28 : RUN wget https://cmake.org/files/v3.20/cmake-3.20.0.tar.gz &&     tar -xzvf cmake-3.20.0.tar.gz &&     cd cmake-3.20.0 &&     ./bootstrap &&     make -j4 &&     sudo make install &&     cd .. && rm -rf cmake-3.20.0 cmake-3.20.0.tar.gz
 ---> Using cache
 ---> 908c089815fb
Step 7/28 : RUN wget https://ftpmirror.gnu.org/gcc/gcc-10.1.0/gcc-10.1.0.tar.xz &&     tar xf gcc-10.1.0.tar.xz &&     cd gcc-10.1.0 &&     sudo contrib/download_prerequisites &&     mkdir gcc10build && cd gcc10build &&     ../configure -v       --build=aarch64-linux-gnu       --host=aarch64-linux-gnu       --target=aarch64-linux-gnu       --prefix=/usr/local/gcc-10.1.0       --enable-checking=release       --enable-languages=c,c++       --disable-multilib       --disable-libstdcxx-pch       --program-suffix=-10.1 &&     make -j$(nproc) && sudo make install-strip && cd ../.. && rm -rf gcc-10.1.0 gcc-10.1.0.tar.xz
 ---> Using cache
 ---> 87e54e6071d1
Step 8/28 : RUN sudo rm -f /usr/bin/cpp &&     sudo ln -s /usr/local/gcc-10.1.0/bin/cpp-10.1 /usr/bin/cpp &&     sudo rm -f /usr/bin/g++ &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-g++-10.1 /usr/bin/g++ &&     sudo rm -f /usr/bin/gcc &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-gcc-10.1 /usr/bin/gcc &&     sudo rm -f /usr/bin/gcc-ar &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-gcc-ar-10.1 /usr/bin/gcc-ar &&     sudo rm -f /usr/bin/gcc-nm &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-gcc-nm-10.1 /usr/bin/gcc-nm &&     sudo rm -f /usr/bin/gcc-ranlib &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-gcc-ranlib-10.1 /usr/bin/gcc-ranlib &&     sudo rm -f /usr/bin/aarch64-linux-gnu-cpp &&     sudo ln -s /usr/local/gcc-10.1.0/bin/cpp-10.1 /usr/bin/aarch64-linux-gnu-cpp &&     sudo rm -f /usr/bin/aarch64-linux-gnu-g++ &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-g++-10.1 /usr/bin/aarch64-linux-gnu-g++ &&     sudo rm -f /usr/bin/aarch64-linux-gnu-gcc &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-gcc-10.1 /usr/bin/aarch64-linux-gnu-gcc &&     sudo rm -f /usr/bin/aarch64-linux-gnu-gcc-ar &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-gcc-ar-10.1 /usr/bin/aarch64-linux-gnu-gcc-ar &&     sudo rm -f /usr/bin/aarch64-linux-gnu-gcc-nm &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-gcc-nm-10.1 /usr/bin/aarch64-linux-gnu-gcc-nm &&     sudo rm -f /usr/bin/aarch64-linux-gnu-gcc-ranlib &&     sudo ln -s /usr/local/gcc-10.1.0/bin/aarch64-linux-gnu-gcc-ranlib-10.1 /usr/bin/aarch64-linux-gnu-gcc-ranlib &&     rm -rf /root/*.tar.gz /root/*.xz
 ---> Using cache
 ---> cc9a47734143
Step 9/28 : RUN git clone https://github.com/KhronosGroup/glslang.git &&     cd glslang && git checkout tags/15.0.0 &&     git clone https://github.com/google/googletest.git External/googletest &&     ./update_glslang_sources.py && mkdir build && cd build &&     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$(pwd)/install" .. &&     make -j$(nproc) install
 ---> Using cache
 ---> 5025294b505e
Step 10/28 : RUN git clone https://github.com/nihui/realsr-ncnn-vulkan.git &&     cd realsr-ncnn-vulkan && git submodule update --init --recursive &&     mkdir build && cd build && cmake ../src && cmake --build . -j$(nproc)
 ---> Using cache
 ---> e6ac479a9561
Step 11/28 : FROM dustynv/jetson-inference:r32.7.1
 ---> bbeb7375d4d8
Step 12/28 : RUN rm -rf /jetson-inference/docs /jetson-inference/build /usr/local/lib/python3.6/dist-packages/torch/test /tmp/*     && rm -rf /usr/lib/aarch64-linux-gnu/python* /usr/lib/aarch64-linux-gnu/pkgconfig     && pip3 uninstall -y plotly botocore pandas     && rm -rf /usr/local/lib/python3.6/dist-packages/plotly /usr/local/lib/python3.6/dist-packages/botocore /usr/local/lib/python3.6/dist-packages/pandas
 ---> Using cache
 ---> 30223cf99d72
Step 13/28 : WORKDIR /app
 ---> Using cache
 ---> 3d390aa676f6
Step 14/28 : RUN apt-get update && apt-get install -y --no-install-recommends     libsm6 libxext6 libxrender-dev ffmpeg libvulkan-dev python3-pip python3-dev     && apt-get clean && rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> 4a1b6ca6c5bc
Step 15/28 : COPY --from=builder /usr/local/gcc-10.1.0 /usr/local/gcc-10.1.0
 ---> Using cache
 ---> 85c35740770b
Step 16/28 : COPY --from=builder /usr/bin/gcc /usr/bin/gcc
 ---> Using cache
 ---> 5018f5b6d352
Step 17/28 : COPY --from=builder /usr/bin/g++ /usr/bin/g++
 ---> Using cache
 ---> f72b248611ed
Step 18/28 : ENV PATH=/usr/local/gcc-10.1.0/bin:$PATH     LD_LIBRARY_PATH=/usr/local/gcc-10.1.0/lib64:$LD_LIBRARY_PATH
 ---> Using cache
 ---> bc0a4f2878ec
Step 19/28 : COPY --from=builder /root/realsr-ncnn-vulkan /root/realsr-ncnn-vulkan
 ---> Using cache
 ---> 18e9e5d2d8ac
Step 20/28 : COPY --from=builder /root/glslang/build/install /root/glslang/install
 ---> Using cache
 ---> e92b92345de4
Step 21/28 : ENV PYTHONIOENCODING=utf-8
 ---> Using cache
 ---> 2899d767e262
Step 22/28 : ENV OPENBLAS_CORETYPE=ARMV8
 ---> Using cache
 ---> 213ad5c1e5f9
Step 23/28 : COPY requirements.txt /app/
 ---> Using cache
 ---> cf84130f3d59
Step 24/28 : RUN apt update && apt install --no-install-recommends -y python3-pip python3-dev build-essential cmake ninja-build && pip3 install --upgrade pip && pip3 install requests flask pika && apt-get install -y python3-opencv && pip3 install --upgrade pip setuptools wheel && pip3 install --no-cache-dir -r requirements.txt && pip3 install  pika imageio==2.6.1 imageio-ffmpeg==0.3.0 &&apt remove --purge -y python3-pip cmake ninja-build && apt clean && rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> 4e72c2552d29
Step 25/28 : COPY app.py  /app/
 ---> Using cache
 ---> 69fe88c0d4e1
Step 26/28 : COPY /steps /app/steps
 ---> Using cache
 ---> 1bada4bec26d
Step 27/28 : EXPOSE 5000
 ---> Using cache
 ---> fa7251f279df
Step 28/28 : ENTRYPOINT ["/bin/bash", "-c", "ln -sf /usr/lib/aarch64-linux-gnu/liblapack.so /usr/lib/aarch64-linux-gnu/liblapack.so.3 && exec python3 app.py"]
 ---> Using cache
 ---> b786f0a9db1e
Successfully built b786f0a9db1e
Successfully tagged dami00/multicomponent_service:latest
