apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: pipeline-manager
rules:
- apiGroups: [""]
  resources: ["pods", "configmaps", "services"]
  verbs: ["get", "list", "watch", "create", "update", "delete","deletecollection"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "delete","deletecollection"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipeline-manager-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: Role
  name: pipeline-manager
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipeline-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pipeline-controller
  template:
    metadata:
      labels:
        app: pipeline-controller
    spec:
      serviceAccountName: default
      containers:
      - name: controller
        image: 192.168.1.252:480/jetson/topology-controller:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: pipeline-controller
spec:
  selector:
    app: pipeline-controller
  type: NodePort
  ports:
    - port: 8080        # porta interna del servizio
      targetPort: 8080  # porta del pod
      nodePort: 30080   # opzionale: porta esterna sul nodo, altrimenti sar√† assegnata automaticamente
